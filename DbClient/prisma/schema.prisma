generator Client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("VITE_DATABASE_URL")
}

model User {
  // what does uuid() do? "Universally Unique Identifier."
  id                String      @id @default(uuid())
  role              UserRole    @default(STUDENT)  // Exactly, student is the default
  email             String      @unique
  name              String      @unique  // Also unique no? I wans't before
  country           String
  picture           String?     // optional? Just like typescript?
  createdAt         DateTime    @default(now())
  // The site has different color options, this would save this parameter according to the user, no?
  preferredColor    PageColors
  preferredLanguage Language
  testimonies       Testimony[] @relation("UserTestimonies")

  @@map("users")   // I guess this map function saves the model or something?
}

model Testimony {
  id          String      @id @default(uuid())
  content     String
  createdAt   DateTime    @default(now())
  rating      Int         @default(4)
  title       String?
  featured    Boolean     @default(false)
  // A relation for saving the user that posted the review
  // userRole (I want to take from the role from the user; I guess it would be better)
  // to do it from a query? (taking userRole from the userId that posted the review?)
  userEmail      String
  user        User        @relation("UserTestimonies", fields: [userEmail], references: [email], onDelete: Cascade)

  @@map("testimonies")
}

// This is suupposed to be a table to show stadistics
// It should be autoincrease or something like that |From our queries I would increase the value depending on the data we get along the way
// For example, when a new student is registered, this value here would upload automatically
model Statistic {
  id            Int     @id @default(autoincrement())
  countries     Int
  satisfaction  Int // this is a porcentage really
  teachers      Int
  students      Int
  courses       Int
  classes       Int

  @@map("statistics")
}

// Now, here I want to set things I can control from my admin page, like the page color,
// toggling visibility of some components (saving visibility state for components)
// and any other thing that right now i don't have very clear in my mind
model pageConfig {
  id            Int            @id @default(autoincrement())
  description   String
  address       String
  phone         String
  email         String
  color         PageColors      @default(LAVENDER)
  language      Language        @default(SPANISH)

  @@map("page_config")
}

// I guess this is ok? And in the code I would match the value with the corresponding hex code no?
enum PageColors {
  LAVENDER
  CORAL
  TEAL
  WARMPINK
  BLUE
  PURPLE
}

// These are the types of users
// The admins and teachers are already determined through environment variables (which could be changed to the databse),
// the students are any user whose emails are not registered as either admin or teacher
enum UserRole {
  ADMIN
  TEACHER
  STUDENT
}

enum Language {
  SPANISH
  ENGLISH
  FRENCH
}